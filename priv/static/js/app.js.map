{"version":3,"sources":["phoenix.js","phoenix_html.js","app.js","socket.js"],"names":[],"mappings":"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","file":"priv/static/js/app.js","sourcesContent":["// Phoenix Channels JavaScript client\n//\n// ## Socket Connection\n//\n// A single connection is established to the server and\n// channels are mulitplexed over the connection.\n// Connect to the server using the `Socket` class:\n//\n//     let socket = new Socket(\"/ws\", {params: {userToken: \"123\"}})\n//     socket.connect()\n//\n// The `Socket` constructor takes the mount point of the socket,\n// the authentication params, as well as options that can be found in\n// the Socket docs, such as configuring the `LongPoll` transport, and\n// heartbeat.\n//\n// ## Channels\n//\n// Channels are isolated, concurrent processes on the server that\n// subscribe to topics and broker events between the client and server.\n// To join a channel, you must provide the topic, and channel params for\n// authorization. Here's an example chat room example where `\"new_msg\"`\n// events are listened for, messages are pushed to the server, and\n// the channel is joined with ok/error/timeout matches:\n//\n//     let channel = socket.channel(\"rooms:123\", {token: roomToken})\n//     channel.on(\"new_msg\", msg => console.log(\"Got message\", msg) )\n//     $input.onEnter( e => {\n//       channel.push(\"new_msg\", {body: e.target.val}, 10000)\n//        .receive(\"ok\", (msg) => console.log(\"created message\", msg) )\n//        .receive(\"error\", (reasons) => console.log(\"create failed\", reasons) )\n//        .receive(\"timeout\", () => console.log(\"Networking issue...\") )\n//     })\n//     channel.join()\n//       .receive(\"ok\", ({messages}) => console.log(\"catching up\", messages) )\n//       .receive(\"error\", ({reason}) => console.log(\"failed join\", reason) )\n//       .receive(\"timeout\", () => console.log(\"Networking issue. Still waiting...\") )\n//\n//\n// ## Joining\n//\n// Creating a channel with `socket.channel(topic, params)`, binds the params to\n// `channel.params`, which are sent up on `channel.join()`.\n// Subsequent rejoins will send up the modified params for\n// updating authorization params, or passing up last_message_id information.\n// Successful joins receive an \"ok\" status, while unsuccessful joins\n// receive \"error\".\n//\n//\n// ## Pushing Messages\n//\n// From the previous example, we can see that pushing messages to the server\n// can be done with `channel.push(eventName, payload)` and we can optionally\n// receive responses from the push. Additionally, we can use\n// `receive(\"timeout\", callback)` to abort waiting for our other `receive` hooks\n//  and take action after some period of waiting. The default timeout is 5000ms.\n//\n//\n// ## Socket Hooks\n//\n// Lifecycle events of the multiplexed connection can be hooked into via\n// `socket.onError()` and `socket.onClose()` events, ie:\n//\n//     socket.onError( () => console.log(\"there was an error with the connection!\") )\n//     socket.onClose( () => console.log(\"the connection dropped\") )\n//\n//\n// ## Channel Hooks\n//\n// For each joined channel, you can bind to `onError` and `onClose` events\n// to monitor the channel lifecycle, ie:\n//\n//     channel.onError( () => console.log(\"there was an error!\") )\n//     channel.onClose( () => console.log(\"the channel has gone away gracefully\") )\n//\n// ### onError hooks\n//\n// `onError` hooks are invoked if the socket connection drops, or the channel\n// crashes on the server. In either case, a channel rejoin is attemtped\n// automatically in an exponential backoff manner.\n//\n// ### onClose hooks\n//\n// `onClose` hooks are invoked only in two cases. 1) the channel explicitly\n// closed on the server, or 2). The client explicitly closed, by calling\n// `channel.leave()`\n//\n\nconst VSN = \"1.0.0\"\nconst SOCKET_STATES = {connecting: 0, open: 1, closing: 2, closed: 3}\nconst DEFAULT_TIMEOUT = 10000\nconst CHANNEL_STATES = {\n  closed: \"closed\",\n  errored: \"errored\",\n  joined: \"joined\",\n  joining: \"joining\",\n}\nconst CHANNEL_EVENTS = {\n  close: \"phx_close\",\n  error: \"phx_error\",\n  join: \"phx_join\",\n  reply: \"phx_reply\",\n  leave: \"phx_leave\"\n}\nconst TRANSPORTS = {\n  longpoll: \"longpoll\",\n  websocket: \"websocket\"\n}\n\nclass Push {\n\n  // Initializes the Push\n  //\n  // channel - The Channel\n  // event - The event, for example `\"phx_join\"`\n  // payload - The payload, for example `{user_id: 123}`\n  // timeout - The push timeout in milliseconds\n  //\n  constructor(channel, event, payload, timeout){\n    this.channel      = channel\n    this.event        = event\n    this.payload      = payload || {}\n    this.receivedResp = null\n    this.timeout      = timeout\n    this.timeoutTimer = null\n    this.recHooks     = []\n    this.sent         = false\n  }\n\n  resend(timeout){\n    this.timeout = timeout\n    this.cancelRefEvent()\n    this.ref          = null\n    this.refEvent     = null\n    this.receivedResp = null\n    this.sent         = false\n    this.send()\n  }\n\n  send(){ if(this.hasReceived(\"timeout\")){ return }\n    this.startTimeout()\n    this.sent = true\n    this.channel.socket.push({\n      topic: this.channel.topic,\n      event: this.event,\n      payload: this.payload,\n      ref: this.ref\n    })\n  }\n\n  receive(status, callback){\n    if(this.hasReceived(status)){\n      callback(this.receivedResp.response)\n    }\n\n    this.recHooks.push({status, callback})\n    return this\n  }\n\n\n  // private\n\n  matchReceive({status, response, ref}){\n    this.recHooks.filter( h => h.status === status )\n                 .forEach( h => h.callback(response) )\n  }\n\n  cancelRefEvent(){ if(!this.refEvent){ return }\n    this.channel.off(this.refEvent)\n  }\n\n  cancelTimeout(){\n    clearTimeout(this.timeoutTimer)\n    this.timeoutTimer = null\n  }\n\n  startTimeout(){ if(this.timeoutTimer){ return }\n    this.ref      = this.channel.socket.makeRef()\n    this.refEvent = this.channel.replyEventName(this.ref)\n\n    this.channel.on(this.refEvent, payload => {\n      this.cancelRefEvent()\n      this.cancelTimeout()\n      this.receivedResp = payload\n      this.matchReceive(payload)\n    })\n\n    this.timeoutTimer = setTimeout(() => {\n      this.trigger(\"timeout\", {})\n    }, this.timeout)\n  }\n\n  hasReceived(status){\n    return this.receivedResp && this.receivedResp.status === status\n  }\n\n  trigger(status, response){\n    this.channel.trigger(this.refEvent, {status, response})\n  }\n}\n\nexport class Channel {\n  constructor(topic, params, socket) {\n    this.state       = CHANNEL_STATES.closed\n    this.topic       = topic\n    this.params      = params || {}\n    this.socket      = socket\n    this.bindings    = []\n    this.timeout     = this.socket.timeout\n    this.joinedOnce  = false\n    this.joinPush    = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout)\n    this.pushBuffer  = []\n    this.rejoinTimer  = new Timer(\n      () => this.rejoinUntilConnected(),\n      this.socket.reconnectAfterMs\n    )\n    this.joinPush.receive(\"ok\", () => {\n      this.state = CHANNEL_STATES.joined\n      this.rejoinTimer.reset()\n      this.pushBuffer.forEach( pushEvent => pushEvent.send() )\n      this.pushBuffer = []\n    })\n    this.onClose( () => {\n      this.socket.log(\"channel\", `close ${this.topic}`)\n      this.state = CHANNEL_STATES.closed\n      this.socket.remove(this)\n    })\n    this.onError( reason => {\n      this.socket.log(\"channel\", `error ${this.topic}`, reason)\n      this.state = CHANNEL_STATES.errored\n      this.rejoinTimer.scheduleTimeout()\n    })\n    this.joinPush.receive(\"timeout\", () => {\n      if(this.state !== CHANNEL_STATES.joining){ return }\n\n      this.socket.log(\"channel\", `timeout ${this.topic}`, this.joinPush.timeout)\n      this.state = CHANNEL_STATES.errored\n      this.rejoinTimer.scheduleTimeout()\n    })\n    this.on(CHANNEL_EVENTS.reply, (payload, ref) => {\n      this.trigger(this.replyEventName(ref), payload)\n    })\n  }\n\n  rejoinUntilConnected(){\n    this.rejoinTimer.scheduleTimeout()\n    if(this.socket.isConnected()){\n      this.rejoin()\n    }\n  }\n\n  join(timeout = this.timeout){\n    if(this.joinedOnce){\n      throw(`tried to join multiple times. 'join' can only be called a single time per channel instance`)\n    } else {\n      this.joinedOnce = true\n    }\n    this.rejoin(timeout)\n    return this.joinPush\n  }\n\n  onClose(callback){ this.on(CHANNEL_EVENTS.close, callback) }\n\n  onError(callback){\n    this.on(CHANNEL_EVENTS.error, reason => callback(reason) )\n  }\n\n  on(event, callback){ this.bindings.push({event, callback}) }\n\n  off(event){ this.bindings = this.bindings.filter( bind => bind.event !== event ) }\n\n  canPush(){ return this.socket.isConnected() && this.state === CHANNEL_STATES.joined }\n\n  push(event, payload, timeout = this.timeout){\n    if(!this.joinedOnce){\n      throw(`tried to push '${event}' to '${this.topic}' before joining. Use channel.join() before pushing events`)\n    }\n    let pushEvent = new Push(this, event, payload, timeout)\n    if(this.canPush()){\n      pushEvent.send()\n    } else {\n      pushEvent.startTimeout()\n      this.pushBuffer.push(pushEvent)\n    }\n\n    return pushEvent\n  }\n\n  // Leaves the channel\n  //\n  // Unsubscribes from server events, and\n  // instructs channel to terminate on server\n  //\n  // Triggers onClose() hooks\n  //\n  // To receive leave acknowledgements, use the a `receive`\n  // hook to bind to the server ack, ie:\n  //\n  //     channel.leave().receive(\"ok\", () => alert(\"left!\") )\n  //\n  leave(timeout = this.timeout){\n    let onClose = () => {\n      this.socket.log(\"channel\", `leave ${this.topic}`)\n      this.trigger(CHANNEL_EVENTS.close, \"leave\")\n    }\n    let leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout)\n    leavePush.receive(\"ok\", () => onClose() )\n             .receive(\"timeout\", () => onClose() )\n    leavePush.send()\n    if(!this.canPush()){ leavePush.trigger(\"ok\", {}) }\n\n    return leavePush\n  }\n\n  // Overridable message hook\n  //\n  // Receives all events for specialized message handling\n  onMessage(event, payload, ref){}\n\n  // private\n\n  isMember(topic){ return this.topic === topic }\n\n  sendJoin(timeout){\n    this.state = CHANNEL_STATES.joining\n    this.joinPush.resend(timeout)\n  }\n\n  rejoin(timeout = this.timeout){ this.sendJoin(timeout) }\n\n  trigger(triggerEvent, payload, ref){\n    this.onMessage(triggerEvent, payload, ref)\n    this.bindings.filter( bind => bind.event === triggerEvent )\n                 .map( bind => bind.callback(payload, ref) )\n  }\n\n  replyEventName(ref){ return `chan_reply_${ref}` }\n}\n\nexport class Socket {\n\n  // Initializes the Socket\n  //\n  // endPoint - The string WebSocket endpoint, ie, \"ws://example.com/ws\",\n  //                                               \"wss://example.com\"\n  //                                               \"/ws\" (inherited host & protocol)\n  // opts - Optional configuration\n  //   transport - The Websocket Transport, for example WebSocket or Phoenix.LongPoll.\n  //               Defaults to WebSocket with automatic LongPoll fallback.\n  //   timeout - The default timeout in milliseconds to trigger push timeouts.\n  //             Defaults `DEFAULT_TIMEOUT`\n  //   heartbeatIntervalMs - The millisec interval to send a heartbeat message\n  //   reconnectAfterMs - The optional function that returns the millsec\n  //                      reconnect interval. Defaults to stepped backoff of:\n  //\n  //     function(tries){\n  //       return [1000, 5000, 10000][tries - 1] || 10000\n  //     }\n  //\n  //   logger - The optional function for specialized logging, ie:\n  //     `logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n  //\n  //   longpollerTimeout - The maximum timeout of a long poll AJAX request.\n  //                        Defaults to 20s (double the server long poll timer).\n  //\n  //   params - The optional params to pass when connecting\n  //\n  // For IE8 support use an ES5-shim (https://github.com/es-shims/es5-shim)\n  //\n  constructor(endPoint, opts = {}){\n    this.stateChangeCallbacks = {open: [], close: [], error: [], message: []}\n    this.channels             = []\n    this.sendBuffer           = []\n    this.ref                  = 0\n    this.timeout              = opts.timeout || DEFAULT_TIMEOUT\n    this.transport            = opts.transport || window.WebSocket || LongPoll\n    this.heartbeatIntervalMs  = opts.heartbeatIntervalMs || 30000\n    this.reconnectAfterMs     = opts.reconnectAfterMs || function(tries){\n      return [1000, 2000, 5000, 10000][tries - 1] || 10000\n    }\n    this.logger               = opts.logger || function(){} // noop\n    this.longpollerTimeout    = opts.longpollerTimeout || 20000\n    this.params               = opts.params || {}\n    this.endPoint             = `${endPoint}/${TRANSPORTS.websocket}`\n    this.reconnectTimer       = new Timer(() => {\n      this.disconnect(() => this.connect())\n    }, this.reconnectAfterMs)\n  }\n\n  protocol(){ return location.protocol.match(/^https/) ? \"wss\" : \"ws\" }\n\n  endPointURL(){\n    let uri = Ajax.appendParams(\n      Ajax.appendParams(this.endPoint, this.params), {vsn: VSN})\n    if(uri.charAt(0) !== \"/\"){ return uri }\n    if(uri.charAt(1) === \"/\"){ return `${this.protocol()}:${uri}` }\n\n    return `${this.protocol()}://${location.host}${uri}`\n  }\n\n  disconnect(callback, code, reason){\n    if(this.conn){\n      this.conn.onclose = function(){} // noop\n      if(code){ this.conn.close(code, reason || \"\") } else { this.conn.close() }\n      this.conn = null\n    }\n    callback && callback()\n  }\n\n  // params - The params to send when connecting, for example `{user_id: userToken}`\n  connect(params){\n    if(params){\n      console && console.log(\"passing params to connect is deprecated. Instead pass :params to the Socket constructor\")\n      this.params = params\n    }\n    if(this.conn){ return }\n\n    this.conn = new this.transport(this.endPointURL())\n    this.conn.timeout   = this.longpollerTimeout\n    this.conn.onopen    = () => this.onConnOpen()\n    this.conn.onerror   = error => this.onConnError(error)\n    this.conn.onmessage = event => this.onConnMessage(event)\n    this.conn.onclose   = event => this.onConnClose(event)\n  }\n\n  // Logs the message. Override `this.logger` for specialized logging. noops by default\n  log(kind, msg, data){ this.logger(kind, msg, data) }\n\n  // Registers callbacks for connection state change events\n  //\n  // Examples\n  //\n  //    socket.onError(function(error){ alert(\"An error occurred\") })\n  //\n  onOpen     (callback){ this.stateChangeCallbacks.open.push(callback) }\n  onClose    (callback){ this.stateChangeCallbacks.close.push(callback) }\n  onError    (callback){ this.stateChangeCallbacks.error.push(callback) }\n  onMessage  (callback){ this.stateChangeCallbacks.message.push(callback) }\n\n  onConnOpen(){\n    this.log(\"transport\", `connected to ${this.endPointURL()}`, this.transport.prototype)\n    this.flushSendBuffer()\n    this.reconnectTimer.reset()\n    if(!this.conn.skipHeartbeat){\n      clearInterval(this.heartbeatTimer)\n      this.heartbeatTimer = setInterval(() => this.sendHeartbeat(), this.heartbeatIntervalMs)\n    }\n    this.stateChangeCallbacks.open.forEach( callback => callback() )\n  }\n\n  onConnClose(event){\n    this.log(\"transport\", \"close\", event)\n    this.triggerChanError()\n    clearInterval(this.heartbeatTimer)\n    this.reconnectTimer.scheduleTimeout()\n    this.stateChangeCallbacks.close.forEach( callback => callback(event) )\n  }\n\n  onConnError(error){\n    this.log(\"transport\", error)\n    this.triggerChanError()\n    this.stateChangeCallbacks.error.forEach( callback => callback(error) )\n  }\n\n  triggerChanError(){\n    this.channels.forEach( channel => channel.trigger(CHANNEL_EVENTS.error) )\n  }\n\n  connectionState(){\n    switch(this.conn && this.conn.readyState){\n      case SOCKET_STATES.connecting: return \"connecting\"\n      case SOCKET_STATES.open:       return \"open\"\n      case SOCKET_STATES.closing:    return \"closing\"\n      default:                       return \"closed\"\n    }\n  }\n\n  isConnected(){ return this.connectionState() === \"open\" }\n\n  remove(channel){\n    this.channels = this.channels.filter( c => !c.isMember(channel.topic) )\n  }\n\n  channel(topic, chanParams = {}){\n    let chan = new Channel(topic, chanParams, this)\n    this.channels.push(chan)\n    return chan\n  }\n\n  push(data){\n    let {topic, event, payload, ref} = data\n    let callback = () => this.conn.send(JSON.stringify(data))\n    this.log(\"push\", `${topic} ${event} (${ref})`, payload)\n    if(this.isConnected()){\n      callback()\n    }\n    else {\n      this.sendBuffer.push(callback)\n    }\n  }\n\n  // Return the next message ref, accounting for overflows\n  makeRef(){\n    let newRef = this.ref + 1\n    if(newRef === this.ref){ this.ref = 0 } else { this.ref = newRef }\n\n    return this.ref.toString()\n  }\n\n  sendHeartbeat(){ if(!this.isConnected()){ return }\n    this.push({topic: \"phoenix\", event: \"heartbeat\", payload: {}, ref: this.makeRef()})\n  }\n\n  flushSendBuffer(){\n    if(this.isConnected() && this.sendBuffer.length > 0){\n      this.sendBuffer.forEach( callback => callback() )\n      this.sendBuffer = []\n    }\n  }\n\n  onConnMessage(rawMessage){\n    let msg = JSON.parse(rawMessage.data)\n    let {topic, event, payload, ref} = msg\n    this.log(\"receive\", `${payload.status || \"\"} ${topic} ${event} ${ref && \"(\" + ref + \")\" || \"\"}`, payload)\n    this.channels.filter( channel => channel.isMember(topic) )\n                 .forEach( channel => channel.trigger(event, payload, ref) )\n    this.stateChangeCallbacks.message.forEach( callback => callback(msg) )\n  }\n}\n\n\nexport class LongPoll {\n\n  constructor(endPoint){\n    this.endPoint        = null\n    this.token           = null\n    this.skipHeartbeat   = true\n    this.onopen          = function(){} // noop\n    this.onerror         = function(){} // noop\n    this.onmessage       = function(){} // noop\n    this.onclose         = function(){} // noop\n    this.pollEndpoint    = this.normalizeEndpoint(endPoint)\n    this.readyState      = SOCKET_STATES.connecting\n\n    this.poll()\n  }\n\n  normalizeEndpoint(endPoint){\n    return(endPoint\n      .replace(\"ws://\", \"http://\")\n      .replace(\"wss://\", \"https://\")\n      .replace(new RegExp(\"(.*)\\/\" + TRANSPORTS.websocket), \"$1/\" + TRANSPORTS.longpoll))\n  }\n\n  endpointURL(){\n    return Ajax.appendParams(this.pollEndpoint, {token: this.token})\n  }\n\n  closeAndRetry(){\n    this.close()\n    this.readyState = SOCKET_STATES.connecting\n  }\n\n  ontimeout(){\n    this.onerror(\"timeout\")\n    this.closeAndRetry()\n  }\n\n  poll(){\n    if(!(this.readyState === SOCKET_STATES.open || this.readyState === SOCKET_STATES.connecting)){ return }\n\n    Ajax.request(\"GET\", this.endpointURL(), \"application/json\", null, this.timeout, this.ontimeout.bind(this), (resp) => {\n      if(resp){\n        var {status, token, messages} = resp\n        this.token = token\n      } else{\n        var status = 0\n      }\n\n      switch(status){\n        case 200:\n          messages.forEach( msg => this.onmessage({data: JSON.stringify(msg)}) )\n          this.poll()\n          break\n        case 204:\n          this.poll()\n          break\n        case 410:\n          this.readyState = SOCKET_STATES.open\n          this.onopen()\n          this.poll()\n          break\n        case 0:\n        case 500:\n          this.onerror()\n          this.closeAndRetry()\n          break\n        default: throw(`unhandled poll status ${status}`)\n      }\n    })\n  }\n\n  send(body){\n    Ajax.request(\"POST\", this.endpointURL(), \"application/json\", body, this.timeout, this.onerror.bind(this, \"timeout\"), (resp) => {\n      if(!resp || resp.status !== 200){\n        this.onerror(status)\n        this.closeAndRetry()\n      }\n    })\n  }\n\n  close(code, reason){\n    this.readyState = SOCKET_STATES.closed\n    this.onclose()\n  }\n}\n\n\nexport class Ajax {\n\n  static request(method, endPoint, accept, body, timeout, ontimeout, callback){\n    if(window.XDomainRequest){\n      let req = new XDomainRequest() // IE8, IE9\n      this.xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback)\n    } else {\n      let req = window.XMLHttpRequest ?\n                  new XMLHttpRequest() : // IE7+, Firefox, Chrome, Opera, Safari\n                  new ActiveXObject(\"Microsoft.XMLHTTP\") // IE6, IE5\n      this.xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback)\n    }\n  }\n\n  static xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback){\n    req.timeout = timeout\n    req.open(method, endPoint)\n    req.onload = () => {\n      let response = this.parseJSON(req.responseText)\n      callback && callback(response)\n    }\n    if(ontimeout){ req.ontimeout = ontimeout }\n\n    // Work around bug in IE9 that requires an attached onprogress handler\n    req.onprogress = () => {}\n\n    req.send(body)\n  }\n\n  static xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback){\n    req.timeout = timeout\n    req.open(method, endPoint, true)\n    req.setRequestHeader(\"Content-Type\", accept)\n    req.onerror = () => { callback && callback(null) }\n    req.onreadystatechange = () => {\n      if(req.readyState === this.states.complete && callback){\n        let response = this.parseJSON(req.responseText)\n        callback(response)\n      }\n    }\n    if(ontimeout){ req.ontimeout = ontimeout }\n\n    req.send(body)\n  }\n\n  static parseJSON(resp){\n    return (resp && resp !== \"\") ?\n             JSON.parse(resp) :\n             null\n  }\n\n  static serialize(obj, parentKey){\n    let queryStr = [];\n    for(var key in obj){ if(!obj.hasOwnProperty(key)){ continue }\n      let paramKey = parentKey ? `${parentKey}[${key}]` : key\n      let paramVal = obj[key]\n      if(typeof paramVal === \"object\"){\n        queryStr.push(this.serialize(paramVal, paramKey))\n      } else {\n        queryStr.push(encodeURIComponent(paramKey) + \"=\" + encodeURIComponent(paramVal))\n      }\n    }\n    return queryStr.join(\"&\")\n  }\n\n  static appendParams(url, params){\n    if(Object.keys(params).length === 0){ return url }\n\n    let prefix = url.match(/\\?/) ? \"&\" : \"?\"\n    return `${url}${prefix}${this.serialize(params)}`\n  }\n}\n\nAjax.states = {complete: 4}\n\n\n// Creates a timer that accepts a `timerCalc` function to perform\n// calculated timeout retries, such as exponential backoff.\n//\n// ## Examples\n//\n//    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n//      return [1000, 5000, 10000][tries - 1] || 10000\n//    })\n//    reconnectTimer.scheduleTimeout() // fires after 1000\n//    reconnectTimer.scheduleTimeout() // fires after 5000\n//    reconnectTimer.reset()\n//    reconnectTimer.scheduleTimeout() // fires after 1000\n//\nclass Timer {\n  constructor(callback, timerCalc){\n    this.callback  = callback\n    this.timerCalc = timerCalc\n    this.timer     = null\n    this.tries     = 0\n  }\n\n  reset(){\n    this.tries = 0\n    clearTimeout(this.timer)\n  }\n\n  // Cancels any previous scheduleTimeout and schedules callback\n  scheduleTimeout(){\n    clearTimeout(this.timer)\n\n    this.timer = setTimeout(() => {\n      this.tries = this.tries + 1\n      this.callback()\n    }, this.timerCalc(this.tries + 1))\n  }\n}\n","// Although ^=parent is not technically correct,\n// we need to use it in order to get IE8 support.\nvar elements = document.querySelectorAll('[data-submit^=parent]')\nvar len = elements.length\n\nfor (var i=0; i<len; ++i) {\n  elements[i].addEventListener('click', function(event){\n    var message = this.getAttribute(\"data-confirm\")\n    if(message === null || confirm(message)){\n      this.parentNode.submit()\n    };\n    event.preventDefault()\n    return false\n  }, false)\n}\n","// Brunch automatically concatenates all files in your\n// watched paths. Those paths can be configured at\n// config.paths.watched in \"brunch-config.js\".\n//\n// However, those files will only be executed if\n// explicitly imported. The only exception are files\n// in vendor, which are never wrapped in imports and\n// therefore are always executed.\n\n// Import dependencies\n//\n// If you no longer want to use a dependency, remember\n// to also remove its path from \"config.paths.watched\".\nimport \"deps/phoenix_html/web/static/js/phoenix_html\"\n\n// Import local files\n//\n// Local files can be imported directly using relative\n// paths \"./socket\" or full ones \"web/static/js/socket\".\n\n// import socket from \"./socket\"\n","// NOTE: The contents of this file will only be executed if\n// you uncomment its entry in \"web/static/js/app.js\".\n\n// To use Phoenix channels, the first step is to import Socket\n// and connect at the socket path in \"lib/my_app/endpoint.ex\":\nimport {Socket} from \"deps/phoenix/web/static/js/phoenix\"\n\nlet socket = new Socket(\"/socket\", {params: {token: window.userToken}})\n\n// When you connect, you'll often need to authenticate the client.\n// For example, imagine you have an authentication plug, `MyAuth`,\n// which authenticates the session and assigns a `:current_user`.\n// If the current user exists you can assign the user's token in\n// the connection for use in the layout.\n//\n// In your \"web/router.ex\":\n//\n//     pipeline :browser do\n//       ...\n//       plug MyAuth\n//       plug :put_user_token\n//     end\n//\n//     defp put_user_token(conn, _) do\n//       if current_user = conn.assigns[:current_user] do\n//         token = Phoenix.Token.sign(conn, \"user socket\", current_user.id)\n//         assign(conn, :user_token, token)\n//       else\n//         conn\n//       end\n//     end\n//\n// Now you need to pass this token to JavaScript. You can do so\n// inside a script tag in \"web/templates/layout/app.html.eex\":\n//\n//     <script>window.userToken = \"<%= assigns[:user_token] %>\";</script>\n//\n// You will need to verify the user token in the \"connect/2\" function\n// in \"web/channels/user_socket.ex\":\n//\n//     def connect(%{\"token\" => token}, socket) do\n//       # max_age: 1209600 is equivalent to two weeks in seconds\n//       case Phoenix.Token.verify(socket, \"user socket\", token, max_age: 1209600) do\n//         {:ok, user_id} ->\n//           {:ok, assign(socket, :user, user_id)}\n//         {:error, reason} ->\n//           :error\n//       end\n//     end\n//\n// Finally, pass the token on connect as below. Or remove it\n// from connect if you don't care about authentication.\n\nsocket.connect()\n\n// Now that you are connected, you can join channels with a topic:\nlet channel = socket.channel(\"topic:subtopic\", {})\nchannel.join()\n  .receive(\"ok\", resp => { console.log(\"Joined successfully\", resp) })\n  .receive(\"error\", resp => { console.log(\"Unable to join\", resp) })\n\nexport default socket\n"]}